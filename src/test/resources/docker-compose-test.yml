# Use postgres/example user/password credentials
version: '3.9'

services:

  db:
#    container_name: postgres-container
    image: postgres
    restart: "no"
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    ports:
      - "5433:5433"
#    networks:
#      - postgres-db-network
    volumes:
      - ./src/main/resources:/docker-entrypoint-initdb.d
    healthcheck:
#      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      test: ["CMD-SHELL", "sh -c 'pg_isready -U counter -d counters'"]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      POSTGRES_USER: counter
      POSTGRES_PASSWORD: counter
      POSTGRES_DB: counters
    expose:
      - 5433


  liquibase:
#    container_name: liquibase-container
    image: liquibase
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src/test/resources/db/changelog:/liquibase/changelog
#      - ./src/main/resources/liquibase.properties:/liquibase/changelog/liquibase.properties
    command: --defaults-file=/liquibase/changelog/liquibase.properties update
#    networks:
#      - postgres-db-network